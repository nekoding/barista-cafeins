// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "barista-client"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_BARISTA_URL")
  extensions = [postgis]
}

enum MIGRATION_STATUS {
  CREATED
  UPDATED
}

// Model
model Project {
  uuid                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cafeins_uuid         String?
  company_code         String
  vendor_no            String
  name                 String
  project_group_code   String            @unique
  created_at           DateTime          @default(now())
  updated_at           DateTime          @updatedAt
  created_employee_no  String?
  modified_employee_no String?
  description          String?
  po_number            String?
  owner_name           String
  owner_nik            String
  status               MIGRATION_STATUS?
  last_read            DateTime?
  is_migrated          Boolean           @default(false)

  @@map("projects")
}

model SitePoint {
  uuid                 String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cafeins_uuid         String?
  name                 String
  site_group_code      String                   @unique
  latitude             Float
  longitude            Float
  geometry             Unsupported("geometry")?
  created_at           DateTime                 @default(now())
  updated_at           DateTime                 @updatedAt
  created_employee_no  String?
  modified_employee_no String?
  status               MIGRATION_STATUS?
  last_read            DateTime?
  is_migrated          Boolean                  @default(false)

  @@map("site_points")
}

model Log {
  uuid       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  level      String
  message    String
  meta       Json?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("logs")
}

model Asset {
  uuid                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cafeins_uuid         String?
  unique_id            String            @unique
  name                 String
  description          String?
  created_at           DateTime          @default(now())
  updated_at           DateTime          @updatedAt
  created_employee_no  String?
  modified_employee_no String?
  code                 String
  asset_group_code     String
  project_group_code   String
  site_group_code      String
  asset_category       String
  asset_ownership      String
  area_ownership       String
  status               MIGRATION_STATUS?
  last_read            DateTime?
  is_migrated          Boolean           @default(false)

  @@map("assets")
}

model Route {
  uuid                 String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cafeins_uuid         String?
  unique_id            String                   @unique
  name                 String
  geometry             Unsupported("geometry")?
  length               Decimal?                 @db.Decimal(10, 3)
  created_at           DateTime                 @default(now())
  updated_at           DateTime                 @updatedAt
  created_employee_no  String?
  modified_employee_no String?
  site_group_code_from String
  site_group_code_to   String
  route_method         String
  route_ownership      String
  status               MIGRATION_STATUS?
  last_read            DateTime?
  is_migrated          Boolean                  @default(false)

  @@map("routes")
}

model Cable {
  uuid                      String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  unique_id                 String            @unique
  project_group_code        String
  name                      String
  description               String?
  length                    Decimal           @db.Decimal(10, 3)
  created_at                DateTime          @default(now())
  updated_at                DateTime          @updatedAt
  created_employee_no       String?
  modified_employee_no      String?
  cable_category            String
  cable_group               String
  site_group_code_from      String
  site_group_code_to        String
  asset_ownership           String
  area_ownership            String
  placement_type            String
  function                  String
  route_unique_id_pembentuk String?
  status                    MIGRATION_STATUS?
  last_read                 DateTime?
  is_migrated               Boolean           @default(false)

  @@map("cables")
}

model Segment {
  uuid                      String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  unique_id                 String            @unique
  project_group_code        String
  name                      String
  created_at                DateTime          @default(now())
  updated_at                DateTime          @updatedAt
  created_employee_no       String?
  modified_employee_no      String?
  site_group_code_from      String
  site_group_code_to        String
  route_unique_id_pembentuk String?
  status                    MIGRATION_STATUS?
  last_read                 DateTime?
  is_migrated               Boolean           @default(false)

  @@map("segments")
}
